name: Bundle OpenAPI Spec

on:
  push:
    branches:
      - main
    paths:
      - '**.yaml'
      - '**.yml'
  pull_request:
    paths:
      - '**.yaml'
      - '**.yml'
  workflow_dispatch:

jobs:
  validate:
    name: Validate OpenAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli

      - name: Validate OpenAPI Spec
        run: redocly lint openapi.yaml

  bump-version:
    name: Bump Version
    needs: validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get_version.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          WITH_V: false
          
      - name: Get new version
        id: get_version
        run: |
          NEW_TAG="${{ steps.bump_version.outputs.new_tag }}"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

  bundle:
    name: Bundle OpenAPI
    needs: [validate, bump-version]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - name: Update OpenAPI version
        run: |
          yq -i '.info.version = strenv(NEW_VERSION)' openapi.yaml
        env:
          NEW_VERSION: ${{ needs.bump-version.outputs.new_version }}

      - name: Bundle OpenAPI Spec
        run: |
          mkdir -p bundle
          redocly bundle openapi.yaml --output bundle/openapi.yaml

      - name: Generate Documentation
        run: |
          redocly build-docs bundle/openapi.yaml -o bundle/index.html

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: bundle/
          retention-days: 1

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add openapi.yaml bundle/openapi.yaml bundle/index.html
          git commit -m "Update OpenAPI specification to version ${{ needs.bump-version.outputs.new_version }}" || echo "No changes to commit"
          git push || echo "No changes to push"

  deploy-pages:
    name: Deploy to GitHub Pages
    needs: bundle
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: bundle

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: bundle

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  create-pr:
    name: Create API PR
    needs: [bundle, bump-version]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with:
          repository: oversizedev/OversizeAPI
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: target_repo
          fetch-depth: 1
          ref: main

      - name: Download bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: bundle

      - name: Configure Git in Target Repository
        run: |
          cd target_repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Create and Switch to Feature Branch
        run: |
          cd target_repo
          BRANCH_NAME="update/openapi-${{ needs.bump-version.outputs.new_version }}"
          git checkout -b $BRANCH_NAME
          
      - name: Copy Updated Files
        run: |
          cp -v bundle/openapi.yaml target_repo/Sources/App/
          cd target_repo
          
      - name: Check for Changes
        id: check-changes
        run: |
          cd target_repo
          git add .
          if ! git diff --staged --quiet; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Changes
        if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          cd target_repo
          BRANCH_NAME="update/openapi-${{ needs.bump-version.outputs.new_version }}"
          git commit -m "Update OpenAPI specification"
          git push -u origin $BRANCH_NAME

      - name: Create Pull Request
        if: steps.check-changes.outputs.changes_detected == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        run: |
          cd target_repo
          BRANCH_NAME="update/openapi-${{ needs.bump-version.outputs.new_version }}"
          gh pr create \
            --repo oversizedev/OversizeAPI \
            --title "Update OpenAPI specification" \
            --body "Automated update from ${{ github.repository }}. Changes include latest OpenAPI specification updates" \
            --base main \
            --head $BRANCH_NAME
