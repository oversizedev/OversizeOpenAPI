name: API Spec CI

on:
  push:
    branches:
      - main
    paths:
      - '**.yaml'
      - '**.yml'
  workflow_dispatch:

jobs:
  bundle:
    name: Bundle and Validate OpenAPI
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli

      - name: Bundle OpenAPI Spec
        run: |
          mkdir -p bundle
          redocly bundle openapi.yaml --output bundle/openapi.yaml

      - name: Validate OpenAPI Spec
        run: redocly lint bundle/openapi.yaml

      - name: Generate Docs
        run: redocly build-docs bundle/openapi.yaml -o bundle/index.html

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-bundle
          path: bundle/
          retention-days: 1

      - name: Generate Timestamp
        id: timestamp
        run: echo "timestamp=$(date -u +'%Y%m%dT%H%M%SZ')" >> $GITHUB_OUTPUT

  deploy-pages:
    name: Deploy Docs
    needs: bundle
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-bundle
          path: dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  create-pr:
    name: Create API PR
    needs: deploy-pages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Download Bundle
        uses: actions/download-artifact@v4
        with:
          name: api-bundle
          path: ${{ github.workspace }}/artifacts

      - name: Checkout Target Repo
        uses: actions/checkout@v4
        with:
          repository: oversizedev/OversizeAPI
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ${{ github.workspace }}/OversizeAPI
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          git config user.name "API Updater Bot"
          git config user.email "actions@users.noreply.github.com"

      - name: Sync with Origin
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          git fetch origin
          git reset --hard origin/main
          git clean -fd

      - name: Create Branch
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          git checkout -b update/api-${{ needs.bundle.outputs.timestamp }}

      - name: Validate Target Repo
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          echo "Current branch: $(git branch --show-current)"
          git status

      - name: Copy Files
        run: |
          cp -v ${{ github.workspace }}/artifacts/openapi.yaml ${{ github.workspace }}/OversizeAPI/Sources/App/openapi.yaml
          echo "File verification:"
          ls -l ${{ github.workspace }}/OversizeAPI/Sources/App/openapi.yaml
          md5sum ${{ github.workspace }}/OversizeAPI/Sources/App/openapi.yaml

      - name: Check Changes
        id: check-changes
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          git add .
          
          # if ! git diff --exit-code --quiet origin/main -- Sources/App/openapi.yaml; then
          #   echo "changes_detected=true" >> $GITHUB_OUTPUT
          #   echo "Changes found:"
          #   git diff origin/main -- Sources/App/openapi.yaml
          # else
          #   echo "changes_detected=false" >> $GITHUB_OUTPUT
          #   echo "No changes detected"
          # fi

      - name: Commit Changes
        # if: steps.check-changes.outputs.changes_detected == 'true'
        run: |
          cd ${{ github.workspace }}/OversizeAPI
          git commit -m "chore: Update OpenAPI specification [skip ci]"
          git push origin update/api-${{ needs.bundle.outputs.timestamp }}

      - name: Create PR
        # if: steps.check-changes.outputs.changes_detected == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ${{ github.workspace }}/OversizeAPI
          title: "API Specification Update"
          body: |
            Automated update from ${{ github.repository }}
            
            - Source: ${{ github.server_url }}/${{ github.repository }}
            - Documentation: ${{ needs.deploy-pages.outputs.page_url }}
          labels: automated,api-update
          branch: update/api-${{ needs.bundle.outputs.timestamp }}
          base: main
          delete-branch: false
          commit-message: "chore: Update OpenAPI specification [skip ci]"
